CSS SUMMARY FILE

Note- some of the definitions were copied from the book. No copyright is intended, and besides the forming of this document, credit to John Duckett & his publisher for the following info!
Also, some content may have been copied over from other websites (like w3 schools). I claim no ownership/authorship, aside from compiling this list.

- CSS associates rules with HTML elements & contains 2 parts
	1. selector
	2. declaration
	Example:	p {
					font-family: Arial;}
	p is the selector
	what's inside the braces {} is the declaration
- Selector
	Indicates what element the rule applies to
	The same rule can apply to more than one element if you separate the element names with commas
- Declarations
	Indicate how the elements (referred to in the selector) should be styled
	Split into two parts- a property and a value, and are separated by ';'
- Property
	Indicate the aspects of the element you want to change
- Values
	Specify the settings you want to use for the chosen properties

	Example:	h1, h2, h3 {
							font-family: Arial;
							color: yellow;}
- Linking
	Used to tell the browser where to find the CSS file used to style the page. Is a empty element, and lives inside the head element. Following are attributes & an example:
	- rel
		Specifies the relationship between the html page and the file it's linked to. The value should be stylesheet when linking to a CSS file.
	- type
		Specifies the type of document being linked to. For CSS, should be text/css.
	- href
		Specifies the path for the css FILE
	<link rel="stylesheet" type="text/css" href="css/styles.css" />
- Internal CSS
	In the HTML, you can use the <style> tag for internal html. However, your CSS should be in an external file.
- You can also specify the style of css within an element.
	Example: <p style="color:red;">
- Selectors
	- Universal Selector
		* {}
		Applies to all elements in the document
	- Type Selector
		h1, h2, h3 {}
		Matches element names
		This targets the <h1>, <h2>, and <h3> elements
	- Class Selector:
		.note {}	Targets any element whose class attribute has a value of note
		p.note {}	Same as above, but only targets <p>

	- ID Selector:
		#introduction {}
		Matchees an element whose id attribute has a value that matches the one specified after the pound or hash symbol
		So, this one targets the element whose id attribute = "introduction"
	- Child Selector
		li>a {}
		Matches an element that is a direct child of another
		So, this targest any <a> elements that are children of an <li> element (but no other <a> elements)
	- Descendant Selector
		p a {}
		Matches an element that is a descendent of another specified element (not just a direct child)
		This targest any <a> elements that sit within a <p> element, even if there are other elements nested between them
	- Adjacent Sibling Selector
		h1+p {}
		Matches an element that is the next sibling of another
		This one targests the first <p> element after any <h1> element (but not the other <p> elements)
		This one targest the first <p> element after any <h1> element (but not other <p> elements)
	- General Sibling Selector
		h1~p {}
		Matches an element that is a sibling of another, although it does not have to be the directly preceding element
		If you have two <p> eelements that are siblings of an <h1> element, this rule would apply to both of them
- Last Rule
	- In CSS, this is very important. If two selectors are identical, then the latter of the two will take precedence.
	- You can also add !important after any property value to indicate that it should be consiered more important than the other rules that apply to the same element.
- Inheritance
	Some properties applied to elements are inherited by child elements.
	For example, if a <div> has a font-family or color property set, this will also apply to most child elements (elements within the div).
	You can also force a lot of properties to inherit values from their parent elements by setting a property to: inherit
- Color
	Ways to set colors:
		RGB values
		Hex Codes
		Color Names
		HSL -> Hue, saturation, lightness/luminosity
	Understanding Color
		Hue - essentially, the color
		Saturation - how much grey is in the color (max saturation = no grey)
		Brightness - how much black is in the color (minimum brightness = very dark, a lot of black)
	Contrast
		Essentially, the difference between two colors.
		Examples:
			low contrast -> white text on a light-grey background (hard to read)
			high contrast -> white text on a black background (easy to read, but hard to read for a long period of time)
			medium contrast - > white text on a grey background (easy to read! good!)
- Comments
	/* */ <- use those! Essentially, the same characters for block comments in many other langauges.
- Typefaces
	- Serif: serif fonts have extra details on the ends of the main strokes of the letters
	- Sans-serif: sans-serif fonts have straight ends to lettres, and therefore have a much cleaner design
	- Monospace: every letter in a monospace (or fixed-width) font is the same width
	- A browser will only display a font if it is installed on the users computer
	- Font stack -> you can specify more than one typeface and create an order of preference
	- Techniques that offer a wider choice of typefaces...
		font-family
		font-face
		service-based font-face
		images
		sifr
		cufon
- Font sizes
	- px (pixels)
	- % (percentages. default 100% size is 16px)
	- em = the width of the letter m. So, 1.3m would be (1.3 * the width of the letter m)
	- pt (1 pt roughly equals 1 px, because a point corresponds to 1/72 of an inch, and most computer displays have a resolution of 72 dots per inch.)
- Fonts
	@font-face allows you to use a font, even if it's not installed on the users computer. You specify a path to a copy of the font, and then it is downloaded if not already on the users machine.
	You have to be careful to make sure that the license for the font permits it to be used in this way.
	Open source font websites:
		www.fontsquirrel.com
		www.fontex.org
		www.openfontlibrary.org
		www.typekit.com
		www.kernest.com
		www.fontspring.com
	You can also link to Google:
		www.google.com/webfonts
	Font order with @font-face
		1. eot
		2. woff
		3. ttf/otf
		4. svg
- Resources
	Website resources for testing your websites, color, etc.
	- browsercam.com
	- browserlab.adobe.com
	- browsershots.org
	- crossbrowsertesting.com
	- positioniseverything.net
	- quirksmode.org
	- colorschemedesigner.com
