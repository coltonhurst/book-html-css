CSS SUMMARY FILE

Note- some of the definitions were copied from the book. No copyright is intended, and besides the forming of this document, credit to John Duckett & his publisher for the following info!
Also, some content may have been copied over from other websites (like w3 schools). I claim no ownership/authorship, aside from compiling this list.

- CSS associates rules with HTML elements & contains 2 parts
	1. selector
	2. declaration
	Example:	p {
					font-family: Arial;}
	p is the selector
	what's inside the braces {} is the declaration
- Selector
	Indicates what element the rule applies to
	The same rule can apply to more than one element if you separate the element names with commas
- Declarations
	Indicate how the elements (referred to in the selector) should be styled
	Split into two parts- a property and a value, and are separated by ';'
- Property
	Indicate the aspects of the element you want to change
- Values
	Specify the settings you want to use for the chosen properties

	Example:	h1, h2, h3 {
							font-family: Arial;
							color: yellow;}
- Linking
	Used to tell the browser where to find the CSS file used to style the page. Is a empty element, and lives inside the head element. Following are attributes & an example:
	- rel
		Specifies the relationship between the html page and the file it's linked to. The value should be stylesheet when linking to a CSS file.
	- type
		Specifies the type of document being linked to. For CSS, should be text/css.
	- href
		Specifies the path for the css FILE
	<link rel="stylesheet" type="text/css" href="css/styles.css" />
- Internal CSS
	In the HTML, you can use the <style> tag for internal html. However, your CSS should be in an external file.
- You can also specify the style of css within an element.
	Example: <p style="color:red;">
- Selectors
	- Universal Selector
		* {}
		Applies to all elements in the document
	- Type Selector
		h1, h2, h3 {}
		Matches element names
		This targets the <h1>, <h2>, and <h3> elements
	- Class Selector:
		.note {}	Targets any element whose class attribute has a value of note
		p.note {}	Same as above, but only targets <p>

	- ID Selector:
		#introduction {}
		Matchees an element whose id attribute has a value that matches the one specified after the pound or hash symbol
		So, this one targets the element whose id attribute = "introduction"
	- Child Selector
		li>a {}
		Matches an element that is a direct child of another
		So, this targest any <a> elements that are children of an <li> element (but no other <a> elements)
	- Descendant Selector
		p a {}
		Matches an element that is a descendent of another specified element (not just a direct child)
		This targest any <a> elements that sit within a <p> element, even if there are other elements nested between them
	- Adjacent Sibling Selector
		h1+p {}
		Matches an element that is the next sibling of another
		This one targests the first <p> element after any <h1> element (but not the other <p> elements)
		This one targest the first <p> element after any <h1> element (but not other <p> elements)
	- General Sibling Selector
		h1~p {}
		Matches an element that is a sibling of another, although it does not have to be the directly preceding element
		If you have two <p> eelements that are siblings of an <h1> element, this rule would apply to both of them
- Last Rule
	- In CSS, this is very important. If two selectors are identical, then the latter of the two will take precedence.
	- You can also add !important after any property value to indicate that it should be consiered more important than the other rules that apply to the same element.